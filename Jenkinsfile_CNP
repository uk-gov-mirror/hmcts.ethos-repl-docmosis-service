#!groovy

@Library("Infrastructure")

def type = "java"
def product = "ethos"
def component = "repl-docmosis-backend"
def branchesToSync = ['demo', 'perftest']

withPipeline(type, product, component) {
  enableAksStagingDeployment()
  onMaster {
    disableLegacyDeployment()
  }
  onDemo {
    disableLegacyDeployment()
  }
  onIthc {
    disableLegacyDeployment()
  }
  onPerftest {
    disableLegacyDeployment()
  }
  onEthosldata {
    disableLegacyDeployment()
    env.TF_STATE_STORAGE_TEMPLATE = 'statestore'
    env.TF_STATE_CONTAINER_TEMPLATE = 'statectr'
  }
  syncBranchesWithMaster(branchesToSync)
  enableSlackNotifications('#ethos-repl-service')

  after('functional') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
  }
}
